<?php

namespace App\Bot\Conversations;

use App\Models\Doctor;
use App\Models\Review;
use BotMan\BotMan\Messages\Conversations\Conversation;
use BotMan\BotMan\Messages\Incoming\Answer;
use BotMan\BotMan\Messages\Outgoing\Actions\Button;
use BotMan\BotMan\Messages\Outgoing\Question;

/**
 * –î–∏–∞–ª–æ–≥ –¥–ª—è –æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–æ–≤ –æ –≤—Ä–∞—á–∞—Ö
 * 
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ deep link: /start review_doctor_uuid
 * –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –æ—Å—Ç–∞–≤–ª—è—Ç—å –æ—Ç–∑—ã–≤—ã —Å –æ—Ü–µ–Ω–∫–æ–π –∏ —Ç–µ–∫—Å—Ç–æ–º
 * 
 * –ü—Ä–æ—Ü–µ—Å—Å:
 * 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –≤—Ä–∞—á–∞ –ø–æ UUID
 * 2. –ü–æ–∫–∞–∑ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤—Ä–∞—á–µ
 * 3. –ó–∞–ø—Ä–æ—Å –æ—Ü–µ–Ω–∫–∏ (1-5 –∑–≤–µ–∑–¥)
 * 4. –ó–∞–ø—Ä–æ—Å —Ç–µ–∫—Å—Ç–∞ –æ—Ç–∑—ã–≤–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
 * 5. –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–∞
 * 6. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–∞ –≤—Ä–∞—á–∞
 */
class ReviewConversation extends Conversation
{
    /**
     * UUID –≤—Ä–∞—á–∞, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –æ—Ç–∑—ã–≤
     * –ü–µ—Ä–µ–¥–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ deep link –ø–∞—Ä–∞–º–µ—Ç—Ä
     */
    protected $doctorUuid;
    
    /**
     * –î–∞–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤–∞, —Å–æ–±–∏—Ä–∞–µ–º—ã–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –¥–∏–∞–ª–æ–≥–∞
     * 
     * –°–æ–¥–µ—Ä–∂–∏—Ç:
     * - doctor_id: ID –≤—Ä–∞—á–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
     * - rating: –æ—Ü–µ–Ω–∫–∞ –æ—Ç 1 –¥–æ 5
     * - text: —Ç–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
     */
    protected $reviewData = [];

    /**
     * –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –¥–∏–∞–ª–æ–≥–∞ –æ—Ç–∑—ã–≤–∞
     * 
     * @param string $doctorUuid UUID –≤—Ä–∞—á–∞ –∏–∑ deep link –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
     */
    public function __construct($doctorUuid)
    {
        $this->doctorUuid = $doctorUuid;
    }

    /**
     * –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –¥–∏–∞–ª–æ–≥ –æ—Ç–∑—ã–≤–∞
     * 
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –≤—Ä–∞—á–∞ –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞
     */
    public function run()
    {
        // –ò—â–µ–º –≤—Ä–∞—á–∞ –ø–æ UUID –∏–∑ deep link
        $doctor = Doctor::where('uuid', $this->doctorUuid)->first();
        
        if (!$doctor) {
            $this->say('‚ùå –í—Ä–∞—á –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –≤—Ä–∞—á–∞ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç–∑—ã–≤–∞
        $this->reviewData['doctor_id'] = $doctor->id;
        $this->showDoctorAndAskRating($doctor);
    }

    /**
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Ä–∞—á–µ –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –æ—Ü–µ–Ω–∫—É
     * 
     * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Ä–∞—á–µ –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç
     * –≤—ã–±—Ä–∞—Ç—å –æ—Ü–µ–Ω–∫—É –æ—Ç 1 –¥–æ 5 –∑–≤–µ–∑–¥
     * 
     * @param Doctor $doctor –ú–æ–¥–µ–ª—å –≤—Ä–∞—á–∞
     */
    public function showDoctorAndAskRating(Doctor $doctor)
    {
        $message = "‚≠ê –û—Å—Ç–∞–≤—å—Ç–µ –æ—Ç–∑—ã–≤ –æ –≤—Ä–∞—á–µ:\n\n";
        $message .= "üë©üèª‚Äç‚öïÔ∏è *{$doctor->full_name}*\n";
        $message .= "üéì –°—Ç–∞–∂: {$doctor->experience} –ª–µ—Ç\n";
        $message .= "üìÖ –í–æ–∑—Ä–∞—Å—Ç –ø—Ä–∏–µ–º–∞: —Å {$doctor->age_admission_from} –¥–æ {$doctor->age_admission_to} –ª–µ—Ç\n\n";
        $message .= "–ü–æ—Å—Ç–∞–≤—å—Ç–µ –æ—Ü–µ–Ω–∫—É –æ—Ç 1 –¥–æ 5:";

        $question = Question::create($message);
        
        // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –æ—Ü–µ–Ω–∫–∏ (1-5 –∑–≤–µ–∑–¥)
        for ($i = 1; $i <= 5; $i++) {
            $stars = str_repeat('‚≠ê', $i);
            $question->addButton(Button::create("{$stars} {$i}")->value($i));
        }
        
        $question->addButton(Button::create('‚ùå –û—Ç–º–µ–Ω–∞')->value('cancel'));

        $this->ask($question, function (Answer $answer) use ($doctor) {
            $rating = $answer->getValue();
            
            // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ–Ω–∏–ª –æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–∞
            if ($rating === 'cancel') {
                $this->say('‚ùå –û—Ç–∑—ã–≤ –æ—Ç–º–µ–Ω–µ–Ω');
                return;
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—ã–±—Ä–∞–Ω–∞ –≤–∞–ª–∏–¥–Ω–∞—è –æ—Ü–µ–Ω–∫–∞
            if (in_array($rating, [1, 2, 3, 4, 5])) {
                $this->reviewData['rating'] = (int)$rating;
                $this->askReviewText($doctor);
            } else {
                // –ï—Å–ª–∏ –ø–æ–ª—É—á–µ–Ω–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ - –ø–æ–≤—Ç–æ—Ä—è–µ–º –≤–æ–ø—Ä–æ—Å
                $this->say('‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –æ—Ü–µ–Ω–∫—É –æ—Ç 1 –¥–æ 5');
                $this->showDoctorAndAskRating($doctor);
            }
        });
    }

    /**
     * –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π)
     * 
     * –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –Ω–∞–ø–∏—Å–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç–∑—ã–≤ –∏–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —ç—Ç–æ—Ç —à–∞–≥.
     * –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç –¥–ª–∏–Ω—É —Ç–µ–∫—Å—Ç–∞ –¥–æ 4000 —Å–∏–º–≤–æ–ª–æ–≤.
     * 
     * @param Doctor $doctor –ú–æ–¥–µ–ª—å –≤—Ä–∞—á–∞
     */
    public function askReviewText(Doctor $doctor)
    {
        $stars = str_repeat('‚≠ê', $this->reviewData['rating']);
        
        $question = Question::create("–í–∞—à–∞ –æ—Ü–µ–Ω–∫–∞: {$stars} ({$this->reviewData['rating']}/5)\n\n–ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞ (–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å'):")
            ->addButtons([
                Button::create('‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å')->value('skip'),
                Button::create('‚ùå –û—Ç–º–µ–Ω–∞')->value('cancel'),
            ]);

        $this->ask($question, function (Answer $answer) use ($doctor) {
            if ($answer->getValue() === 'cancel') {
                $this->say('‚ùå –û—Ç–∑—ã–≤ –æ—Ç–º–µ–Ω–µ–Ω');
                return;
            }
            
            if ($answer->getValue() === 'skip') {
                // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ–ø—É—Å—Ç–∏–ª —Ç–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞
                $this->reviewData['text'] = null;
            } else {
                $text = trim($answer->getText());
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É —Ç–µ–∫—Å—Ç–∞ (–ª–∏–º–∏—Ç Telegram + –ë–î)
                if (strlen($text) > 4000) {
                    $this->say('‚ùå –¢–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π (–º–∞–∫—Å–∏–º—É–º 4000 —Å–∏–º–≤–æ–ª–æ–≤)');
                    $this->askReviewText($doctor);
                    return;
                }
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—Å—Ç, –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ null
                $this->reviewData['text'] = $text ?: null;
            }
            
            $this->confirmReview($doctor);
        });
    }

    /**
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç–∑—ã–≤–∞ –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
     * 
     * –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∑—ã–≤ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π,
     * –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ü–µ–Ω–∫—É –∏–ª–∏ —Ç–µ–∫—Å—Ç, –ª–∏–±–æ –æ—Ç–º–µ–Ω–∏—Ç—å –æ—Ç–∑—ã–≤
     * 
     * @param Doctor $doctor –ú–æ–¥–µ–ª—å –≤—Ä–∞—á–∞
     */
    public function confirmReview(Doctor $doctor)
    {
        $stars = str_repeat('‚≠ê', $this->reviewData['rating']);
        
        $message = "üìù *–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ—Ç–∑—ã–≤:*\n\n";
        $message .= "üë©üèª‚Äç‚öïÔ∏è –í—Ä–∞—á: {$doctor->full_name}\n";
        $message .= "‚≠ê –û—Ü–µ–Ω–∫–∞: {$stars} ({$this->reviewData['rating']}/5)\n";
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        if ($this->reviewData['text']) {
            $message .= "üí¨ –û—Ç–∑—ã–≤: {$this->reviewData['text']}\n";
        }

        $question = Question::create($message)
            ->addButtons([
                Button::create('‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤')->value('confirm'),
                Button::create('‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç')->value('edit_text'),
                Button::create('‚≠ê –ò–∑–º–µ–Ω–∏—Ç—å –æ—Ü–µ–Ω–∫—É')->value('edit_rating'),
                Button::create('‚ùå –û—Ç–º–µ–Ω–∞')->value('cancel'),
            ]);

        $this->ask($question, function (Answer $answer) use ($doctor) {
            switch ($answer->getValue()) {
                case 'confirm':
                    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–∑—ã–≤ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
                    $this->saveReview($doctor);
                    break;
                case 'edit_text':
                    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é —Ç–µ–∫—Å—Ç–∞
                    $this->askReviewText($doctor);
                    break;
                case 'edit_rating':
                    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –≤—ã–±–æ—Ä—É –æ—Ü–µ–Ω–∫–∏
                    $this->showDoctorAndAskRating($doctor);
                    break;
                case 'cancel':
                    $this->say('‚ùå –û—Ç–∑—ã–≤ –æ—Ç–º–µ–Ω–µ–Ω');
                    break;
                default:
                    // –ï—Å–ª–∏ –ø–æ–ª—É—á–µ–Ω –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç - –ø–æ–≤—Ç–æ—Ä—è–µ–º –≤–æ–ø—Ä–æ—Å
                    $this->confirmReview($doctor);
            }
        });
    }

    /**
     * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ—Ç–∑—ã–≤ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥ –≤—Ä–∞—á–∞
     * 
     * –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü–µ reviews –∏ –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ—Ç
     * –æ–±—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥ –≤—Ä–∞—á–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—Å–µ—Ö –æ—Ç–∑—ã–≤–æ–≤
     * 
     * @param Doctor $doctor –ú–æ–¥–µ–ª—å –≤—Ä–∞—á–∞
     */
    public function saveReview(Doctor $doctor)
    {
        try {
            // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram
            $user = $this->getBot()->getUser();
            
            // –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –æ—Ç–∑—ã–≤–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            $review = Review::create([
                'text' => $this->reviewData['text'],
                'rating' => $this->reviewData['rating'],
                'user_id' => $user->getId(), // Telegram user ID
                'doctor_id' => $this->reviewData['doctor_id'],
                'status' => 1, // –°—Ç–∞—Ç—É—Å: –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω (–∞–∫—Ç–∏–≤–µ–Ω)
            ]);

            // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥ –≤—Ä–∞—á–∞
            // sum_ratings - —Å—É–º–º–∞ –≤—Å–µ—Ö –æ—Ü–µ–Ω–æ–∫
            // count_ratings - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∑—ã–≤–æ–≤
            $doctor->sum_ratings += $this->reviewData['rating'];
            $doctor->count_ratings += 1;
            $doctor->save();

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–ª–∞–≥–æ–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            $stars = str_repeat('‚≠ê', $this->reviewData['rating']);
            $this->say("‚úÖ *–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤!*\n\n{$stars} –í–∞—à–∞ –æ—Ü–µ–Ω–∫–∞: {$this->reviewData['rating']}/5\n\nü©∫ –í–∞—à –æ—Ç–∑—ã–≤ –ø–æ–º–æ–∂–µ—Ç –¥—Ä—É–≥–∏–º –ø–∞—Ü–∏–µ–Ω—Ç–∞–º —Å–¥–µ–ª–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—ã–±–æ—Ä.");
            
        } catch (\Exception $e) {
            // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ —É–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ª–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
            $this->say('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ—Ç–∑—ã–≤–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
            \Log::error('Bot review creation error: ' . $e->getMessage());
        }
    }
}
