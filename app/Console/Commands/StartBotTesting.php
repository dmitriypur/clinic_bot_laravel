<?php

namespace App\Console\Commands;

use Illuminate\Console\Command;
use Illuminate\Support\Facades\Http;

class StartBotTesting extends Command
{
    protected $signature = 'bot:start-testing {--token= : Telegram bot token}';
    protected $description = 'Start bot testing with ngrok tunnel';

    public function handle()
    {
        $this->info('ü§ñ –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram –±–æ—Ç–∞...');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º ngrok
        if (!$this->checkNgrok()) {
            return 1;
        }

        // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
        $token = $this->option('token') ?: $this->ask('–í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω Telegram –±–æ—Ç–∞ (–ø–æ–ª—É—á–∏—Ç–µ —É @BotFather)');
        
        if (!$token) {
            $this->error('‚ùå –¢–æ–∫–µ–Ω –Ω–µ —É–∫–∞–∑–∞–Ω');
            return 1;
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º .env
        $this->updateEnvFile($token);

        $this->info("\nüìã –ü–æ—à–∞–≥–æ–≤–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:");
        $this->info('1. –í –Ω–æ–≤–æ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–µ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: ngrok http 8000');
        $this->info('2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ HTTPS URL –∏–∑ ngrok (–Ω–∞–ø—Ä–∏–º–µ—Ä: https://abc123.ngrok.io)');
        
        $ngrokUrl = $this->ask('3. –í–≤–µ–¥–∏—Ç–µ ngrok URL (—Å https://)');
        
        if (!$ngrokUrl || !str_starts_with($ngrokUrl, 'https://')) {
            $this->error('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π URL. –î–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å https://');
            return 1;
        }

        $webhookUrl = rtrim($ngrokUrl, '/') . '/botman';
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook
        $this->info("\nüîó –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook: {$webhookUrl}");
        
        if ($this->setWebhook($token, $webhookUrl)) {
            $this->info('‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
            
            // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
            $this->getBotInfo($token);
            
            $this->info("\nüéâ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞:");
            $this->info('‚Ä¢ –ü–µ—Ä–µ–π–¥–∏—Ç–µ –∫ –±–æ—Ç—É –≤ Telegram');
            $this->info('‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ /start');
            $this->info('‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –¥–∏–∞–ª–æ–≥–æ–≤');
            
            $this->info("\nüìä –î–ª—è –æ—Ç–ª–∞–¥–∫–∏:");
            $this->info('‚Ä¢ –õ–æ–≥–∏ Laravel: tail -f storage/logs/laravel.log');
            $this->info('‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook: php artisan telegram:info');
            
        } else {
            $this->error('‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook');
            return 1;
        }

        return 0;
    }

    private function checkNgrok(): bool
    {
        $result = shell_exec('which ngrok');
        if (empty($result)) {
            $this->error('‚ùå ngrok –Ω–µ –Ω–∞–π–¥–µ–Ω');
            $this->info('–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ ngrok: brew install ngrok');
            $this->info('–ò–ª–∏ —Å–∫–∞—á–∞–π—Ç–µ —Å: https://ngrok.com/download');
            return false;
        }
        return true;
    }

    private function updateEnvFile($token): void
    {
        $envPath = base_path('.env');
        $envContent = file_get_contents($envPath);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–ª–∏ –¥–æ–±–∞–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω
        if (str_contains($envContent, 'TELEGRAM_TOKEN=')) {
            $envContent = preg_replace('/TELEGRAM_TOKEN=.*/', "TELEGRAM_TOKEN={$token}", $envContent);
        } else {
            $envContent .= "\nTELEGRAM_TOKEN={$token}";
        }
        
        file_put_contents($envPath, $envContent);
        $this->info('‚úÖ –¢–æ–∫–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ .env');
    }

    private function setWebhook($token, $webhookUrl): bool
    {
        $response = Http::post("https://api.telegram.org/bot{$token}/setWebhook", [
            'url' => $webhookUrl,
            'max_connections' => 100,
            'allowed_updates' => ['message', 'callback_query'],
        ]);

        if ($response->successful()) {
            $data = $response->json();
            return $data['ok'] ?? false;
        }

        return false;
    }

    private function getBotInfo($token): void
    {
        $response = Http::get("https://api.telegram.org/bot{$token}/getMe");
        
        if ($response->successful()) {
            $data = $response->json();
            if ($data['ok']) {
                $bot = $data['result'];
                $this->info("\nü§ñ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:");
                $this->info("   –ò–º—è: {$bot['first_name']}");
                if (isset($bot['username'])) {
                    $this->info("   Username: @{$bot['username']}");
                    $this->info("   –°—Å—ã–ª–∫–∞: https://t.me/{$bot['username']}");
                }
            }
        }
    }
}