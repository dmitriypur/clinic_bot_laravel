<?php

namespace App\Console\Commands;

use Illuminate\Console\Command;
use Illuminate\Support\Facades\Http;

class TelegramBotInfo extends Command
{
    protected $signature = 'telegram:info';
    protected $description = 'Get Telegram bot information and webhook status';

    public function handle()
    {
        $token = config('botman.telegram.token');
        
        if (!$token || $token === 'your_bot_token_here') {
            $this->error('‚ùå TELEGRAM_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
            $this->info('–î–æ–±–∞–≤—å—Ç–µ TELEGRAM_TOKEN=your_bot_token –≤ .env —Ñ–∞–π–ª');
            return 1;
        }

        $this->info('ü§ñ –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ...');
        
        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
        $botInfo = $this->getBotInfo($token);
        if ($botInfo) {
            $this->displayBotInfo($botInfo);
        }

        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook
        $webhookInfo = $this->getWebhookInfo($token);
        if ($webhookInfo) {
            $this->displayWebhookInfo($webhookInfo);
        }

        return 0;
    }

    private function getBotInfo($token)
    {
        $response = Http::get("https://api.telegram.org/bot{$token}/getMe");
        
        if ($response->successful()) {
            $data = $response->json();
            if ($data['ok']) {
                return $data['result'];
            }
        }
        
        $this->error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ');
        return null;
    }

    private function getWebhookInfo($token)
    {
        $response = Http::get("https://api.telegram.org/bot{$token}/getWebhookInfo");
        
        if ($response->successful()) {
            $data = $response->json();
            if ($data['ok']) {
                return $data['result'];
            }
        }
        
        $this->error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook');
        return null;
    }

    private function displayBotInfo($botInfo)
    {
        $this->info("\nüìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:");
        $this->table(['–ü–∞—Ä–∞–º–µ—Ç—Ä', '–ó–Ω–∞—á–µ–Ω–∏–µ'], [
            ['ID', $botInfo['id']],
            ['–ò–º—è', $botInfo['first_name']],
            ['Username', '@' . ($botInfo['username'] ?? '–Ω–µ —É–∫–∞–∑–∞–Ω')],
            ['–ú–æ–∂–µ—Ç –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è—Ç—å—Å—è –∫ –≥—Ä—É–ø–ø–∞–º', $botInfo['can_join_groups'] ? '–î–∞' : '–ù–µ—Ç'],
            ['–ú–æ–∂–µ—Ç —á–∏—Ç–∞—Ç—å –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è', $botInfo['can_read_all_group_messages'] ? '–î–∞' : '–ù–µ—Ç'],
            ['–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç inline —Ä–µ–∂–∏–º', $botInfo['supports_inline_queries'] ? '–î–∞' : '–ù–µ—Ç'],
        ]);

        if (isset($botInfo['username'])) {
            $this->info("üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –±–æ—Ç–∞: https://t.me/{$botInfo['username']}");
        }
    }

    private function displayWebhookInfo($webhookInfo)
    {
        $this->info("\nüîó –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ webhook:");
        
        if (empty($webhookInfo['url'])) {
            $this->warn('‚ö†Ô∏è  Webhook –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
            $this->info('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: php artisan telegram:webhook <URL>');
        } else {
            $this->table(['–ü–∞—Ä–∞–º–µ—Ç—Ä', '–ó–Ω–∞—á–µ–Ω–∏–µ'], [
                ['URL', $webhookInfo['url']],
                ['–°—Ç–∞—Ç—É—Å', $webhookInfo['has_custom_certificate'] ? '–° —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–º' : '–û–±—ã—á–Ω—ã–π'],
                ['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π', $webhookInfo['max_connections'] ?? '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'],
                ['–†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è', implode(', ', $webhookInfo['allowed_updates'] ?? ['–≤—Å–µ'])],
                ['–ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞', $webhookInfo['last_error_message'] ?? '–Ω–µ—Ç'],
                ['–î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –æ—à–∏–±–∫–∏', isset($webhookInfo['last_error_date']) ? date('Y-m-d H:i:s', $webhookInfo['last_error_date']) : '–Ω–µ—Ç'],
            ]);

            if (!empty($webhookInfo['last_error_message'])) {
                $this->error("‚ùå –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: {$webhookInfo['last_error_message']}");
            } else {
                $this->info('‚úÖ Webhook —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –æ—à–∏–±–æ–∫');
            }
        }
    }
}