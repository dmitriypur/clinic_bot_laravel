#!/bin/bash

# üìä –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –æ—á–µ—Ä–µ–¥–µ–π
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./check-queues.sh

echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –æ—á–µ—Ä–µ–¥–µ–π Laravel"
echo "=================================="
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—á–µ—Ä–µ–¥–µ–π
echo "‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—á–µ—Ä–µ–¥–µ–π:"
if [ -f ".env" ]; then
    QUEUE_CONNECTION=$(grep "QUEUE_CONNECTION" .env | cut -d'=' -f2)
    echo "   QUEUE_CONNECTION: $QUEUE_CONNECTION"
else
    echo "   ‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–¥–∞—á –≤ –æ—á–µ—Ä–µ–¥–∏
echo "üìã –ó–∞–¥–∞—á–∏ –≤ –æ—á–µ—Ä–µ–¥–∏:"
if command -v php &> /dev/null; then
    JOBS_COUNT=$(php artisan tinker --execute="echo DB::table('jobs')->count();" 2>/dev/null || echo "–û—à–∏–±–∫–∞")
    echo "   –ó–∞–¥–∞—á –≤ –æ—á–µ—Ä–µ–¥–∏: $JOBS_COUNT"
    
    FAILED_JOBS=$(php artisan tinker --execute="echo DB::table('failed_jobs')->count();" 2>/dev/null || echo "–û—à–∏–±–∫–∞")
    echo "   –ù–µ—É–¥–∞—á–Ω—ã—Ö –∑–∞–¥–∞—á: $FAILED_JOBS"
else
    echo "   ‚ùå PHP –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Supervisor (–µ—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)
if command -v supervisorctl &> /dev/null; then
    echo "üîß Supervisor —Å—Ç–∞—Ç—É—Å:"
    supervisorctl status laravel-worker:* 2>/dev/null || echo "   –í–æ—Ä–∫–µ—Ä—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
else
    echo "üîß Supervisor: –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã queue:work
echo "üîÑ –ü—Ä–æ—Ü–µ—Å—Å—ã queue:work:"
QUEUE_PROCESSES=$(ps aux | grep "queue:work" | grep -v grep | wc -l)
if [ $QUEUE_PROCESSES -gt 0 ]; then
    echo "   ‚úÖ –ù–∞–π–¥–µ–Ω–æ $QUEUE_PROCESSES –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ queue:work"
    ps aux | grep "queue:work" | grep -v grep | awk '{print "   PID:", $2, "CPU:", $3"%", "MEM:", $4"%", "CMD:", $11, $12, $13}'
else
    echo "   ‚ùå –ü—Ä–æ—Ü–µ—Å—Å—ã queue:work –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
fi
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —ç–∫—Å–ø–æ—Ä—Ç—ã
echo "üì§ –ü–æ—Å–ª–µ–¥–Ω–∏–µ —ç–∫—Å–ø–æ—Ä—Ç—ã:"
if command -v php &> /dev/null; then
    php artisan tinker --execute="
    \$exports = \App\Models\Export::orderBy('created_at', 'desc')->limit(3)->get();
    if(\$exports->count() > 0) {
        foreach(\$exports as \$export) {
            echo '   ID: ' . \$export->id . ', File: ' . \$export->file_name . ', Status: ' . (\$export->completed_at ? 'Completed' : 'Pending') . ', Rows: ' . \$export->successful_rows . '/' . \$export->total_rows . PHP_EOL;
        }
    } else {
        echo '   –≠–∫—Å–ø–æ—Ä—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã' . PHP_EOL;
    }
    " 2>/dev/null || echo "   –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —ç–∫—Å–ø–æ—Ä—Ç–æ–≤"
else
    echo "   ‚ùå PHP –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi
echo ""

# –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
echo "üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:"
if [ "$QUEUE_CONNECTION" = "sync" ]; then
    echo "   ‚ö†Ô∏è  –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –æ—á–µ—Ä–µ–¥–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)"
elif [ "$QUEUE_CONNECTION" = "database" ]; then
    if [ $QUEUE_PROCESSES -eq 0 ]; then
        echo "   üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç–µ –æ—á–µ—Ä–µ–¥–∏: ./start-queues.sh"
        echo "   üîß –ò–ª–∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ Supervisor: sudo ./setup-supervisor.sh"
    else
        echo "   ‚úÖ –û—á–µ—Ä–µ–¥–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ"
    fi
else
    echo "   ‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –æ—á–µ—Ä–µ–¥–µ–π: $QUEUE_CONNECTION"
fi

echo ""
echo "üéØ –ì–æ—Ç–æ–≤–æ!"
